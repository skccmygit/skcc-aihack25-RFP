CREATE TABLE ROLES (
  ROLE_ID SERIAL PRIMARY KEY,
  ROLE_NAME VARCHAR(50) NOT NULL,
  USER_ID INT REFERENCES USERS(ID)
);


CREATE TABLE USERS (
    ID SERIAL PRIMARY KEY,
    EMAIL VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    BIRTHDATE DATE NOT NULL,
    ORGANIZATION VARCHAR(255) NOT NULL,
    PHONE VARCHAR(20) NOT NULL CHECK (PHONE ~ '^01[016789]-?[0-9]{3,4}-?[0-9]{4}$'),
    ROLE VARCHAR(20) NOT NULL DEFAULT 'USER',
    CREATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE COURSES (
  COURSE_ID SERIAL PRIMARY KEY,
  TITLE VARCHAR(200) NOT NULL,
  DESCRIPTION TEXT,
  CATEGORY VARCHAR(100),
  START_DATE DATE,
  END_DATE DATE,
  CREATED_BY INT REFERENCES USERS(ID),
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE COURSE_SESSIONS (
  SESSION_ID SERIAL PRIMARY KEY,
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  LOCATION VARCHAR(255),
  START_DATETIME TIMESTAMP,
  END_DATETIME TIMESTAMP
);

CREATE TABLE COURSE_ENROLLMENTS (
  ENROLLMENT_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  STATUS VARCHAR(20),
  ENROLLED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE COURSE_PROGRESS (
  PROGRESS_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  PROGRESS_RATE DECIMAL(5,2)
);

CREATE TABLE COURSE_CERTIFICATES (
  CERTIFICATE_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  ISSUED_AT TIMESTAMP
);

CREATE TABLE SURVEYS (
  SURVEY_ID SERIAL PRIMARY KEY,
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  TITLE VARCHAR(200)
);

CREATE TABLE SURVEY_RESPONSES (
  RESPONSE_ID SERIAL PRIMARY KEY,
  SURVEY_ID INT REFERENCES SURVEYS(SURVEY_ID),
  USER_ID INT REFERENCES USERS(ID),
  RESPONSE_TEXT TEXT
);

CREATE TABLE EXAMS (
  EXAM_ID SERIAL PRIMARY KEY,
  COURSE_ID INT REFERENCES COURSES(COURSE_ID),
  TITLE VARCHAR(200)
);

CREATE TABLE EXAM_RESULTS (
  RESULT_ID SERIAL PRIMARY KEY,
  EXAM_ID INT REFERENCES EXAMS(EXAM_ID),
  USER_ID INT REFERENCES USERS(ID),
  SCORE DECIMAL(5,2)
);

CREATE TABLE FACILITIES (
  FACILITY_ID SERIAL PRIMARY KEY,
  NAME VARCHAR(100),
  LOCATION VARCHAR(255)
);

CREATE TABLE FACILITY_RESERVATIONS (
  RESERVATION_ID SERIAL PRIMARY KEY,
  FACILITY_ID INT REFERENCES FACILITIES(FACILITY_ID),
  USER_ID INT REFERENCES USERS(ID),
  RESERVED_DATE DATE,
  STATUS VARCHAR(20)
);

CREATE TABLE NOTICES (
  NOTICE_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  TITLE VARCHAR(200),
  CONTENT TEXT,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE FAQS (
  FAQ_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  QUESTION TEXT,
  ANSWER TEXT
);

CREATE TABLE QNA (
  QNA_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  QUESTION TEXT,
  ANSWER TEXT,
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE SUPPORT_TICKETS (
  TICKET_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  SUBJECT VARCHAR(200),
  DESCRIPTION TEXT,
  STATUS VARCHAR(20),
  CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE CONTENTS (
  CONTENT_ID SERIAL PRIMARY KEY,
  TITLE VARCHAR(200),
  FILE_PATH VARCHAR(255),
  UPLOADED_BY INT REFERENCES USERS(ID),
  UPLOADED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE CERTIFICATE_VERIFICATION (
  VERIFY_ID SERIAL PRIMARY KEY,
  CERTIFICATE_ID INT REFERENCES COURSE_CERTIFICATES(CERTIFICATE_ID),
  VERIFICATION_CODE VARCHAR(100) UNIQUE,
  VERIFIED_AT TIMESTAMP
);

CREATE TABLE SYSTEM_CODES (
  CODE_ID SERIAL PRIMARY KEY,
  CODE_GROUP VARCHAR(50),
  CODE_VALUE VARCHAR(100),
  CODE_LABEL VARCHAR(200)
);

CREATE TABLE LOGIN_LOGS (
  LOG_ID SERIAL PRIMARY KEY,
  USER_ID INT REFERENCES USERS(ID),
  LOGIN_TIME TIMESTAMP,
  IP_ADDRESS VARCHAR(50)
);

